{"version":3,"sources":["components/Chart .tsx","App.tsx","index.tsx"],"names":["Chart","input","totalTime","calculateWidth","value","calculateTransform","index","result","i","time","className","map","el","classNames","style","width","left","inputData","name","App","useState","setInput","reduce","sum","useEffect","generateNewValues","newValue","min","max","Math","round","random","setTimeout","type","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4TASaA,EAAyB,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,MAAOC,EAAgB,EAAhBA,UACxCC,EAAiB,SAACC,GAEtB,MAAM,GAAN,OAAkB,IAARA,EAAcF,EAAxB,MAGIG,EAAqB,SAACC,GAI1B,IAHA,IAAIC,EAAS,EAGJC,EAAI,EAAGA,EAAIF,EAAOE,IACzBD,GAAUN,EAAMO,GAAGC,KAGrB,OAAON,EAAeI,IAGxB,OACE,qBAAKG,UAAU,QAAf,SACGT,EAAMU,KAAI,SAACC,EAAIN,GAAL,OACT,qBAGEI,UAAWG,IAAW,cAAD,uBAAgCP,IAHvD,SAKE,qBACEI,UAAU,cACVI,MAAO,CACLC,MAAOZ,EAAeS,EAAGH,MACzBO,KAAMX,EAAmBC,IAJ7B,SAOE,+BACGM,EAAGH,UAXHH,SC3BTW,EAAY,CAChB,CAAEC,KAAM,eAAgBT,KAAM,KAC9B,CAAES,KAAM,eAAgBT,KAAM,IAC9B,CAAES,KAAM,YAAaT,KAAM,GAC3B,CAAES,KAAM,OAAQT,KAAM,MAqDTU,EAlDO,WACpB,MAA0BC,mBAAiB,IAA3C,mBAAOnB,EAAP,KAAcoB,EAAd,KACMnB,EAAYD,EAAMqB,QAAO,SAACC,EAAKX,GAAN,OAAaW,EAAMX,EAAGH,OAAM,GAE3De,qBAAU,WACRH,EAASJ,KACR,IAEH,IAAMQ,EAAoB,WAKxB,IAAMC,EAAWzB,EAAMU,KAAI,SAAAC,GAAE,kCAEtBA,GAFsB,IAGzBH,MAPwBkB,EAOC,EAPYC,EAOT,GANvBC,KAAKC,MAA4C,IAArCD,KAAKE,UAAYH,EAAMD,GAAOA,IAAa,MADhE,IAA4BA,EAAaC,KAWzCP,EAASK,IASX,OANAF,qBAAU,WACRQ,YAAW,WACTP,MACC,QAIH,sBAAKf,UAAU,MAAf,UACE,oBAAIA,UAAU,aAAd,kCAGA,cAAC,EAAD,CACET,MAAOA,EACPC,UAAWA,IAGb,wBACE+B,KAAK,SACLvB,UAAU,cACVwB,QAAST,EAHX,8BC7CNU,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.08222a3c.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport './Chart.scss';\n\ntype Props = {\n  input: Data[],\n  totalTime: number,\n};\n\nexport const Chart: React.FC<Props> = ({ input, totalTime }) => {\n  const calculateWidth = (value: number) => {\n    // eslint-disable-next-line no-mixed-operators\n    return `${value * 100 / totalTime}%`;\n  };\n\n  const calculateTransform = (index: number) => {\n    let result = 0;\n\n    // eslint-disable-next-line no-plusplus\n    for (let i = 0; i < index; i++) {\n      result += input[i].time;\n    }\n\n    return calculateWidth(result);\n  };\n\n  return (\n    <div className=\"Chart\">\n      {input.map((el, index) => (\n        <div\n          // eslint-disable-next-line react/no-array-index-key\n          key={index}\n          className={classNames('Chart__item', `Chart__item--${index}`)}\n        >\n          <div\n            className=\"Chart__time\"\n            style={{\n              width: calculateWidth(el.time),\n              left: calculateTransform(index),\n            }}\n          >\n            <span>\n              {el.time}\n            </span>\n          </div>\n        </div>\n      ))}\n    </div>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './App.scss';\nimport { Chart } from './components/Chart ';\n\nconst inputData = [\n  { name: 'Landing Page', time: 7.4 },\n  { name: 'Configurator', time: 0.2 },\n  { name: 'Check-out', time: 7.0 },\n  { name: 'Deal', time: 3.8 },\n];\n\nconst App: React.FC = () => {\n  const [input, setInput] = useState<Data[]>([]);\n  const totalTime = input.reduce((sum, el) => sum + el.time, 0);\n\n  useEffect(() => {\n    setInput(inputData);\n  }, []);\n\n  const generateNewValues = () => {\n    function getRandomArbitrary(min: number, max: number) {\n      return Math.round((Math.random() * (max - min) + min) * 10) / 10;\n    }\n\n    const newValue = input.map(el => (\n      {\n        ...el,\n        time: getRandomArbitrary(0, 20),\n      }\n    ));\n\n    setInput(newValue);\n  };\n\n  useEffect(() => {\n    setTimeout(() => {\n      generateNewValues();\n    }, 30000);\n  });\n\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">\n        spent time (seconds)\n      </h1>\n      <Chart\n        input={input}\n        totalTime={totalTime}\n      />\n\n      <button\n        type=\"button\"\n        className=\"App__button\"\n        onClick={generateNewValues}\n      >\n        Adobe button\n      </button>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}